// <auto-generated />
using System;
using FinanceDashboard.Data.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceDashboard.Data.SqlServer.Migrations
{
    [DbContext(typeof(FinanceDashboardContext))]
    [Migration("20220902183656_addedSubscriptionEntity")]
    partial class addedSubscriptionEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FinanceDashboard.Data.SqlServer.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CanceledBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CanceledOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RenewalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RenewalCycle")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RenewalDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscribedOnEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscribedOnMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId", "UserId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("FinanceDashboard.Data.SqlServer.Entities.User", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashingSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("InvalidPasswordCount")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHashHistory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondFactorKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SecondFactorValidated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VerifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("AccountId", "Id");

                    b.HasAlternateKey("Email")
                        .HasName("AlternateKey_Email");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            Id = new Guid("d781d6af-1a3c-4576-871e-27bab65534e6"),
                            CreatedOn = new DateTime(2022, 9, 3, 0, 6, 55, 826, DateTimeKind.Local).AddTicks(8004),
                            Email = "atishay1928@outlook.com",
                            FirstName = "Atishay",
                            HashingSalt = "==4d8dh51d9c",
                            LastName = "Vishwakarma",
                            MobileNumber = "9827766387",
                            Name = "Atishay Vishwakarma",
                            PasswordHash = "iuqagbrdfikhwboarnown;fmlmpqwjpmlml;m;'qe65464",
                            PasswordHashHistory = "iuqagbrdfikhwboarnown;fmlmpqwjpmlml;m;'qe65464,"
                        });
                });

            modelBuilder.Entity("FinanceDashboard.Data.SqlServer.Entities.Subscription", b =>
                {
                    b.HasOne("FinanceDashboard.Data.SqlServer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserAccountId", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
